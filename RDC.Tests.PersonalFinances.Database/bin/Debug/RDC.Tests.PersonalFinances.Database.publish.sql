/*
Deployment script for DBRDCPERSONALFINANCE

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DBRDCPERSONALFINANCE"
:setvar DefaultFilePrefix "DBRDCPERSONALFINANCE"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[Lancamentos]...';


GO
CREATE TABLE [dbo].[Lancamentos] (
    [Codigo]    INT              IDENTITY (1, 1) NOT NULL,
    [Data]      DATETIME         NOT NULL,
    [Valor]     NUMERIC (18, 10) NOT NULL,
    [Descricao] VARCHAR (250)    NOT NULL,
    [Conta]     VARCHAR (50)     NOT NULL,
    [Tipo]      CHAR (1)         NOT NULL,
    PRIMARY KEY CLUSTERED ([Codigo] ASC)
);


GO
PRINT N'Creating Procedure [dbo].[InserirLancamento]...';


GO
CREATE PROCEDURE [dbo].[InserirLancamento]
	@Data DATETIME,
	@Valor NUMERIC(18,10),
	@Descricao VARCHAR(250),
	@Conta VARCHAR(50),
	@Tipo CHAR(1)
AS
BEGIN
	INSERT INTO Lancamentos([Data], [Valor], [Descricao], [Conta], [Tipo])
	VALUES (@Data, @Valor, @Descricao, @Conta, @Tipo)

	SELECT @@IDENTITY
END
GO
PRINT N'Creating Procedure [dbo].[ObterLancamentosPorMes]...';


GO
CREATE PROCEDURE [dbo].[ObterLancamentosPorMes]
	@Ano int,
	@Mes int
AS
	SELECT	*
	FROM	Lancamentos	as l
	WHERE	MONTH(l.[Data]) = @Mes
	AND		YEAR(l.[Data]) = @Ano
	ORDER BY l.[Data]
GO
PRINT N'Creating Procedure [dbo].[ObterTotalizadoresPorMes]...';


GO
CREATE PROCEDURE [dbo].[ObterTotalizadoresPorMes]
	@Ano int,
	@Mes int
AS
	SELECT	l.Conta, SUM(l.Valor) as Total
	FROM	Lancamentos as l
	WHERE	MONTH(l.[Data]) = @Mes
	AND		YEAR(l.[Data]) = @Ano
	GROUP BY l.Conta
GO
PRINT N'Update complete.';


GO
